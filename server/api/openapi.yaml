openapi: 3.0.1
info:
  contact:
    email: zkong@gsma.com
    name: Zhen Kong
  description: This is the REST api specification for the Common-adapter layer
  title: Common-Adapter
  version: 0.0.1
servers:
- url: /api/v1/
tags:
- description: Receive Notification From Offchain Comms
  name: event
- description: Access to Contract Object
  name: contract
- description: Access to Signature of Contract
  name: signature
- description: Access to Usage of Contract
  name: usage
- description: Access to Settlement of Contract
  name: settlement
- description: Access to API status information
  name: status
- description: Access to discovery information
  name: discovery
paths:
  /discovery/msps:
    get:
      description: Show a list of all MSPs
      operationId: getDiscoveryMSPs
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: A list of all discovered MSPs
        "500":
          content: {}
          description: Internal Error
      tags:
      - discovery
      x-eov-operation-handler: controllers/DiscoveryController
  /discovery/msps/{mspid}:
    get:
      description: Show details for a specific MSP
      operationId: getDiscoveryMSP
      parameters:
      - description: Name of a MSP
        explode: false
        in: path
        name: mspid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: Details about the requested MSP
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - discovery
      x-eov-operation-handler: controllers/DiscoveryController
  /status:
    get:
      description: Show version information of the API
      operationId: getApiStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: The status of the service
        "500":
          content: {}
          description: Internal Error
      tags:
      - status
      x-eov-operation-handler: controllers/StatusController
  /contracts/events/:
    post:
      description: Webhook callback
      operationId: eventReceived
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        description: Webhook event Object Payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Successful operation, returns Status message
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - event
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/EventController
  /contracts/:
    get:
      description: Show a list of all Contracts
      operationId: getContracts
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: The status of the service
        "500":
          content: {}
          description: Internal Error
      tags:
      - contract
      x-eov-operation-handler: controllers/ContractController
    post:
      description: Create a new Contract
      operationId: createContract
      parameters:
      - description: The Destination MSPID
        explode: true
        in: query
        name: toMSP
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
        description: Contract Object Payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: Successful operation, returns created Contract Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - contract
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/ContractController
  /contracts/{contractID}:
    delete:
      description: Delete a Contract By its ID
      operationId: deleteContractByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: The status of the service
        "500":
          content: {}
          description: Internal Error
      tags:
      - contract
      x-eov-operation-handler: controllers/ContractController
    get:
      description: Get a Contract By its ID
      operationId: getContractByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The return format ( "raw" | "json" )
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: The Selected Contract Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - contract
      x-eov-operation-handler: controllers/ContractController
  /contracts/{contractID}/send:
    put:
      description: Uploads existing Contract to blockchain -> @MSP
      operationId: sendContractByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: Successful operation, returns sent Contract Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - contract
      x-eov-operation-handler: controllers/ContractController
  /contracts/{contractID}/signatures/:
    get:
      description: Get All signatures of a given Contract
      operationId: getSignatures
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: List of available Signatures
        "500":
          content: {}
          description: Internal Error
      tags:
      - signature
      x-eov-operation-handler: controllers/SignatureController
  /contracts/{contractID}/signatures/{signatureID}:
    get:
      description: Get Signature Object by its ID
      operationId: getSignatureByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Signature ID
        explode: false
        in: path
        name: signatureID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signature'
          description: The Selected Signature Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - signature
      x-eov-operation-handler: controllers/SignatureController
    put:
      description: Update Signature Object by its ID
      operationId: updateSignatureByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Signature ID
        explode: false
        in: path
        name: signatureID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signature'
        description: Signature Object Payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: Successful operation, returns updated Signature Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - signature
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/SignatureController
  /contracts/{contractID}/usages/:
    get:
      description: Get All usage of a given Contract
      operationId: getUsages
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: List of available Usages
        "500":
          content: {}
          description: Internal Error
      tags:
      - usage
      x-eov-operation-handler: controllers/UsageController
    post:
      description: Create a new Usage
      operationId: createUsage
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usage'
        description: Usage Object Payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: Successful operation, returns created Usage Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - usage
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/UsageController
  /contracts/{contractID}/usages/{usageID}:
    delete:
      description: Delete a Usage By its ID
      operationId: deleteUsageByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Usage ID
        explode: false
        in: path
        name: usageID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: The status of the service
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - usage
      x-eov-operation-handler: controllers/UsageController
    get:
      description: Get Usage Object by its ID
      operationId: getUsageByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Usage ID
        explode: false
        in: path
        name: usageID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
          description: The Usage Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - usage
      x-eov-operation-handler: controllers/UsageController
    put:
      description: Update Usage Object by its ID
      operationId: updateUsageByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Usage ID
        explode: false
        in: path
        name: usageID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usage'
        description: Usage Object Payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
          description: Successful operation, returns updated Usage Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - usage
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/UsageController
  /contracts/{contractID}/usages/{usageID}/send:
    put:
      description: Uploads the usage data to the blockchain -> @MSP
      operationId: sendUsageById
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Usage ID
        explode: false
        in: path
        name: usageID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - usage
      x-eov-operation-handler: controllers/UsageController
  /contracts/{contractID}/usages/{usageID}/generate:
    put:
      description: Trigger the settlement computation
      operationId: generateSettlementByUsageId
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Usage ID
        explode: false
        in: path
        name: usageID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - usage
      x-eov-operation-handler: controllers/UsageController
  /contracts/{contractID}/settlements/:
    get:
      description: Get All Settlement of a given Contract
      operationId: getSettlements
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: List of available Settlements
        "500":
          content: {}
          description: Internal Error
      tags:
      - settlement
      x-eov-operation-handler: controllers/SettlementController
  /contracts/{contractID}/settlements/{settlementID}:
    get:
      description: Get Settlement Object by its ID
      operationId: getSettlementByID
      parameters:
      - description: The contract ID
        explode: false
        in: path
        name: contractID
        required: true
        schema:
          type: string
        style: simple
      - description: The Settlement ID
        explode: false
        in: path
        name: settlementID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settlement'
          description: The Settlement Object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ErrorResponse'
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - settlement
      x-eov-operation-handler: controllers/SettlementController
components:
  schemas:
    Event:
      title: Event JSON
      type: object
    Contract:
      title: Contract JSON
      type: object
    Signature:
      title: Signature JSON
      type: object
    Usage:
      title: Usage JSON
      type: object
    Settlement:
      title: Settlement JSON
      type: object
    SuccessResponse:
      example:
        description: XXXX Operation successful
        status: OK
      properties:
        status:
          description: Outcome of the operation
          example: OK
          type: string
        description:
          description: Description of the operation
          example: XXXX Operation successful
          type: string
      required:
      - status
      title: Success Response JSON
      type: object
    "400ErrorResponse":
      properties:
        error:
          description: a list of pre-defined error names
          example: invalid_request
          type: string
        description:
          description: Text Description of the error
          example: The Request is invalid
          type: string
      required:
      - description
      - error
      title: 400 Error Response JSON
      type: object
